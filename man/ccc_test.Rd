% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ccc_test.R
\name{ccc_test}
\alias{ccc_test}
\title{Identify Differential or Enriched Cell-Cell Communication}
\usage{
ccc_test(
  ccc_obj,
  contrast = NULL,
  test_type = NULL,
  ha = NULL,
  c_linear = 0,
  c_logistic = 0,
  c_hurdle = 0,
  score = c("product", "sum"),
  verbose = TRUE,
  padj_method = "BH",
  cell_type_padj = TRUE,
  chunk_size = 10
)
}
\arguments{
\item{ccc_obj}{output of \code{\link[=ccc_diff]{ccc_diff()}} or \code{\link[=ccc_enrich]{ccc_enrich()}}.}

\item{contrast}{a named numeric vector or a numeric matrix with column names. The names should match the levels of the variable being tested (specified by \code{group_col} argument of \code{\link[=ccc_diff]{ccc_diff()}}; the testings are performed based on this). Only used if \code{ccc_obj} is the output of \code{\link[=ccc_diff]{ccc_diff()}}.}

\item{test_type}{a character string for the type of test. Either "chisq" or "z". If "chisq", perform Wald Chisq tests. If "z", perform Wald Z tests. Defaults to "chisq" for \code{ccc_diff} and "z" for \code{ccc_enrich}. Must be "chisq" if \code{contrast} has more than one row.}

\item{ha}{a character string specifying the alternative hypothesis. Let \eqn{\theta} denote the difference in the product of ligand and receptor expression levels comparing target to background cell types (\code{ccc_enrich}) or specified by \code{contrast} (\code{ccc_diff}).
\itemize{
\item \dQuote{\code{greater}}: \eqn{\theta > c}
\item \dQuote{\code{less}}: \eqn{\theta < c}
\item \dQuote{\code{greater.abs}}: \eqn{|\theta| > c}
\item \dQuote{\code{less.abs}}: \eqn{|\theta| < c}
}
Only used if \code{test_type = "z"}. Defaults to "greater" for \code{ccc_enrich}. \eqn{c} is specified using \code{c_linear}, \code{c_logistic}, and \code{c_hurdle} arguments.}

\item{c_linear, c_logistic, c_hurdle}{numeric scalar. \code{c_linear} is for the tests on the linear component, \code{c_logistic} is for the tests on the logistic component, and \code{c_hurdle} is for the tests on the hurdle model. Default to 0. Must be non-negative for \code{ha = "greater.abs"} and \code{ha = "less.abs"}.}

\item{score}{a character string specifying the method for computing effect sizes.
\itemize{
\item \dQuote{\code{product}}: (the default) effect sizes are computed as the product of ligand and receptor expressions. For linear component: product of conditional mean expressions. For logistic component: product of expression rates (probabilities). For hurdle: product of all four components.
\item \dQuote{\code{sum}}: effect sizes are computed as the sum of ligand and receptor expressions. For linear component: sum of conditional mean expressions. For logistic component: sum of log-odds (coefficients). For hurdle: sum of (probability Ã— conditional mean) for ligand and receptor separately.
}}

\item{verbose}{logical scalar. If \code{TRUE} (the default), display a progress bar. The default handler is "progress". This package uses the \pkg{progressr} framework for progress reporting, so users can customize the progress bar. See \code{\link[progressr:handlers]{progressr::handlers()}} for customizing progress bar behavior. Note that progress bars are not displayed in non-interactive mode or R markdown.}

\item{padj_method}{a character string for multiple testing correction method. This is passed to \code{\link[stats:p.adjust]{stats::p.adjust()}}. Defaults to "BH".}

\item{cell_type_padj}{logical scalar. If \code{TRUE} (the default), adjust p-values for each sender-receiver pair.}

\item{chunk_size}{integer scalar. The number of communication pairs (each defined by a distinct combination of sender, receiver, ligand, and receptor) per chunk. Passed to the \code{future.chunk.size} argument of \code{\link[future.apply:future_mapply]{future.apply::future_mapply()}}. Defaults to 10. To enable parallelization, users should use the \pkg{future} package.}
}
\value{
a data frame contains effect sizes, p-values and adjusted p-values for each cell-cell communication event.
}
\description{
Perform Wald tests on the product of ligand expression levels in sender and receptor expression levels in receiver for differential or enriched cell-cell communication.
}
\details{
This function performs Wald tests based on the output of \code{\link[=ccc_diff]{ccc_diff()}} or \code{\link[=ccc_enrich]{ccc_enrich()}}.
By default, Wald Chisq tests are performed for differential ccc analysis and one-sided Wald Z tests are performed for enriched ccc analysis (alternative hypothesis: communication event in target cell types > background cell types).

If the linear component is fitted successfully, this function performs a Wald test on the product (or sum, if \code{score = "sum"}) of ligand and receptor conditional mean expressions (condition on expression levels > \code{threshold}).
If the logistic componenet is fitted successfully, this function performs a Wald test on the product of ligand and receptor expression rates (\code{score = "product"}) or the sum of ligand and receptor log-odds (\code{score = "sum"}).
If both components are fitted successfully, this function performs a Wald test on the combined effect. For \code{score = "product"}: conditional mean of ligand \verb{*} expression rate of ligand \verb{*} conditional mean of receptor \verb{*} expression rate of receptor. For \code{score = "sum"}: (expression rate of ligand \verb{*} conditional mean of ligand) + (expression rate of receptor \verb{*} conditional mean of receptor).
The delta method is applied to obtain the relevant standard errors, using the estimates from the output of \verb{ccc_*}.
The effect sizes are computed as the product or sum (depending on \code{score}) of ligand and receptor expressions. For \code{score = "product"}: conditional mean expressions, expression rates, and mean expression levels are multiplied. For \code{score = "sum"}: conditional mean expressions and log-odds are summed (with appropriate transformations for hurdle model). Each element corresponds to a level of \code{group_col}, multiplied by \code{contrast} (\code{ccc_diff}), or the difference comparing target against background cell types (\code{ccc_enrich}).

If \code{ha = "greater.abs"}, the test statistic is \eqn{(|\hat{\theta}| - c)/se(\hat{\theta})}, and the p-value is two-sided.
If \code{ha = "less.abs"}, the test statistics are \eqn{(\hat{\theta} - c)/se(\hat{\theta})} and \eqn{(\hat{\theta} + c)/se(\hat{\theta})}. The p-value is the maximum of the two one-sided tests.

When both linear and logistic components are fitted successfully in \verb{ccc_*}, three different methods are used to combine their p-values:
\itemize{
\item{\code{"2-part"}}: a chi-square test statistic is computed as the sum of the linear and logistic test statistics, with the degrees of freedom added. This is only available if \code{test_type = "chisq"}.
\item{\code{"Stouffer's method"}}: p-values from the linear and logistic components are converted to Z-scores, summed up, scaled by \eqn{\sqrt{2}} and converted back to p-values.
\item{\code{"Fisher's method"}}: a chi-square test statistic is computed as -2 times the sum of the logarithms of the p-values from the linear and logistic components, with the degrees of freedom equal to 4.
}

Parallelization is supported via \pkg{future}. Progress bars are customized using \pkg{progressr}.
}
\examples{
\dontrun{
## Data simulation
dat.sim <- sim_count(seed = 123)
expression_matrix <- log_normalize(dat.sim$counts)
metadata <- dat.sim$metadata
lrdb.sim <- sim_lr(seed = 456, n_lr = 10)

## Differential ccc analysis
a <- ccc_diff(expression_matrix = expression_matrix, metadata = metadata,
   id_col = "sample", lr = lrdb.sim, sender = "CT1", receiver = "CT3")

contrast1 <- matrix(c(-1, 1, 0,
                      -1, 0, 1), nrow = 2L, byrow = TRUE,
                      dimnames = list(NULL, c("grp1","grp2","grp3")))
a.result1 <- ccc_test(a, contrast = contrast1)
head(a.result1)

contrast2 <- c(grp1 = -1, grp2 = 1)
a.result2 <- ccc_test(a, contrast = contrast2, test_type = "z", ha = "greater")
head(a.result2)

## Enriched ccc analysis
b <- ccc_enrich(expression_matrix = expression_matrix, metadata = metadata,
    id_col = "sample", lr = lrdb.sim, sender = "CT1", receiver = "CT3")

b.result1 <- ccc_test(b)
head(b.result1)

b.result2 <- ccc_test(b, test_type = "z", ha = "greater",
    c_linear = 0.1, c_logistic = 0.1, c_hurdle = 0.1)
head(b.result2)

## Using sum scoring method
a.result.sum <- ccc_test(a, contrast = contrast2, score = "sum")
head(a.result.sum)

b.result.sum <- ccc_test(b, score = "sum")
head(b.result.sum)
}

}
